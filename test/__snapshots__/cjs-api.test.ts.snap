// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api > api: mixed declarations 1`] = `
"interface A {
    name: string;
}
interface B {
    name: string;
}
interface C {
    name: string;
}
interface Options {
    a?: A;
    b?: B;
    c?: C;
}
declare function plugin(options?: Options): Options;

export = plugin;
export type { A, B, C, Options };
"
`;

exports[`api > api: re-Export Types 1`] = `
"import _default from './index.mjs';
export = _default;
export { ResolvedOptions } from './index.mjs';
export { A, B, CC as C, CC, Options } from './types.mjs';
"
`;

exports[`api > api: re-Export Types 2`] = `
"import { Options } from './types.mjs';
export { A, B, CC as C, CC } from './types.mjs';

interface ResolvedOptions extends Options {
    name: string;
}
declare function plugin(options?: Options): ResolvedOptions;

export = plugin;
export { Options, type ResolvedOptions };
"
`;

exports[`api > api: re-Export Types 3`] = `
"interface A {
    name: string;
}
interface B {
    name: string;
}
interface C {
    name: string;
}

interface Options {
    a?: A;
    b?: B;
    c?: C;
}

export type { A, B, C, C as CC, Options };
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: mixed declarations 1`] = `
"interface A {
    name: string;
}
interface B {
    name: string;
}
interface C {
    name: string;
}
interface Options {
    a?: A;
    b?: B;
    c?: C;
}
declare function plugin(options?: Options): Options;

export = plugin;
export type { A, B, C, Options };
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export Types 1`] = `
"import _default from './index.mjs';
export = _default;
export { ResolvedOptions } from './index.mjs';
export { A, B, CC as C, CC, Options } from './types.mjs';
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export Types 2`] = `
"import { Options } from './types.mjs';
export { A, B, CC as C, CC } from './types.mjs';

interface ResolvedOptions extends Options {
    name: string;
}
declare function plugin(options?: Options): ResolvedOptions;

export = plugin;
export { Options, type ResolvedOptions };
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export Types 3`] = `
"interface A {
    name: string;
}
interface B {
    name: string;
}
interface C {
    name: string;
}

interface Options {
    a?: A;
    b?: B;
    c?: C;
}

export type { A, B, C, C as CC, Options };
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export as default 1`] = `
"import { resolve } from 'pathe';
export = resolve;
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export as default 2`] = `
"declare class DefaultClass {
    name: string;
    constructor(name: string);
}

export = DefaultClass;
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export as default 3`] = `
"import MagicString from 'magic-string';
export = MagicString;
export { MagicStringOptions } from 'magic-string';
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export as default 4`] = `
"import _default from 'magic-string';
export = _default;
import 'pathe';
"
`;

exports[`api: node10 and Node16 Default Exports Types > api: re-Export as default 5`] = `
"import { resolve } from 'pathe';
export = resolve;
"
`;
